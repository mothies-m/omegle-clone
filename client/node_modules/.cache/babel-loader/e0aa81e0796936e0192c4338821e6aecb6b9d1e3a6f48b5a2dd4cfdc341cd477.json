{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drig0\\\\Desktop\\\\omegle-clone\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport io from 'socket.io-client';\nimport { useState } from 'react';\nimport Chats from './Chats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const socket = io.connect(\"http://localhost:3001\");\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showChat, setshowChat] = useState(false);\n  const join_room = () => {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n    setshowChat(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Message..\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Room number..\",\n        value: room,\n        type: \"number\",\n        onChange: e => {\n          setRoom(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: join_room,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), \") : (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chats, {\n        socket: socket,\n        username: username,\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \")}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZzwbtP+IfGN1+b6bHe+y6nihttU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","Chats","jsxDEV","_jsxDEV","App","_s","socket","connect","username","setUsername","room","setRoom","showChat","setshowChat","join_room","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/drig0/Desktop/omegle-clone/client/src/App.jsx"],"sourcesContent":["import './App.css';\r\nimport io from 'socket.io-client';\r\nimport { useState } from 'react';\r\nimport Chats from './Chats';\r\n\r\nfunction App() {\r\n  const socket = io.connect(\"http://localhost:3001\")\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [showChat, setshowChat] = useState(false);\r\n\r\n  const join_room = () => {\r\n    if (username !==\"\" && room !==\"\" ){\r\n      socket.emit(\"join_room\", room);\r\n    }\r\n    setshowChat(true)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    \r\n        <h1>Messages</h1>\r\n        <div>\r\n          <input placeholder='Message..' value={username} onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }} \r\n          />\r\n          <input placeholder='Room number..' value={room} type=\"number\" onChange={(e) => {\r\n            setRoom(e.target.value);\r\n          }} \r\n          />\r\n          <button onClick={join_room}>SEND</button>\r\n        </div>\r\n      ) : (\r\n      <div>\r\n        <Chats socket={socket} username={username} room={room}/>\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGP,EAAE,CAACQ,OAAO,CAAC,uBAAuB,CAAC;EAElD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMc,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIN,QAAQ,KAAI,EAAE,IAAIE,IAAI,KAAI,EAAE,EAAE;MAChCJ,MAAM,CAACS,IAAI,CAAC,WAAW,EAAEL,IAAI,CAAC;IAChC;IACAG,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEV,OAAA;IAAAa,QAAA,gBAEIb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAOkB,WAAW,EAAC,WAAW;QAACC,KAAK,EAAEd,QAAS;QAACe,QAAQ,EAAGC,CAAC,IAAK;UAC/Df,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAC7B;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACFjB,OAAA;QAAOkB,WAAW,EAAC,eAAe;QAACC,KAAK,EAAEZ,IAAK;QAACgB,IAAI,EAAC,QAAQ;QAACH,QAAQ,EAAGC,CAAC,IAAK;UAC7Eb,OAAO,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACzB;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACFjB,OAAA;QAAQwB,OAAO,EAAEb,SAAU;QAAAE,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,SAER,eAAAjB,OAAA;MAAAa,QAAA,eACEb,OAAA,CAACF,KAAK;QAACK,MAAM,EAAEA,MAAO;QAACE,QAAQ,EAAEA,QAAS;QAACE,IAAI,EAAEA;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,MAER;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACf,EAAA,CApCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}